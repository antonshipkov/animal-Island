В проекте Animal-Island реализована модель жизни живых существ (животных) на ограниченной территории (острове).  
За основу моделирования взято пособие МАТЕМАТИЧЕСКОЕ МОДЕЛИРОВАНИЕ И ИССЛЕДОВАНИЕ УСТОЙЧИВОСТИ БИОЛОГИЧЕСКИХ СООБЩЕСТВ. 
https://batrachos.com/sites/default/files/pictures/Books/Aleksandrov_dr_2016_Mathematical%20Modeling%20and%20Investigation%20of%20Stability.pdf

Основная идея моделирования основывается на сбалансированности биологической системы, т.е. она состоит в том,
 что не должно быть “ям”, не один из видов существ не должен расти и сокращаться волнообразно. С точки зрения
 работы программы, время каждой итерации не должно расти или падать волнообразно.

В проекте реализовано поведение 4 видов животных, 2 хищников: Wolf, Fox и 2 травоядных: Rabbit, Horse.
Классы написаны по одной поведенческой схеме, т.е. не составляет труда добавить любое количество дополнительных
 классов животных.
Вводные данные по видам содержаться в одном системном файле: resources\application.conf
В зависимости от моделирования, вводные данные по животным, а также по самому острову с легкостью меняются.
Помимо основных вводных данных в тех задании, добавлены дополнительные параметры, такие как зрение, пол,
 а также время беременности особи, учтен максимальный  возраст каждого животного.
В дереве есть следующие папки: config, draw, factory, logics, model, resousces, swing.
В папке config находится один класс Configuration, в классе реализован интерфейс Config и класс ConfigFactory
 для загрузки файла конфигурации.

В папке draw находятся классы, которые рисуют все необходимые нам объекты используя класс Graphics2D.

В папке factory находятся классы, использующие фабричный методы для создания объектов. 

В папке logics находятся классы реализующую основную логику биосистемы: рост травы, передвижение животных,
 рождение новых особей.

В паке model находятся классы, описывающие животных. Родительским классом для всех животных является класс Animal.
В соответствии с заданием, в нем реализованы основные методы: передвигаться, кушать, размножаться.
В дочерних классах прописана логика поведения каждого животного. Предусмотрено “осознанное” поведение особей,
 особи не проявляют интереса к еде, если уровень здоровья больше половины (можно регулировать). При нахождении на
 одной клетке, в классах LivingHorse и LivingRabbit предусмотрен ThreadLocalRandom для определения вероятности быть
 съеденными, значение можно регулировать. При желании кушать хищники ищут ближайшую жертву, в противном случае движение
 по клеткам определяется случайным образом. Введены понятия взрослости и возраста, размножение возможно при достижении
  определенного возраста, все особи смертные. Добавлено понятие беременности, что бы особи появлялись  не сразу,
  а также добавлены особи разных полов, которые появляются рандомным способом.

В паке resources находятся необходимые ресурсные файлы.

В папке swing находятся классы которые наследуют классы JFrame и JPanel. 
В классах прописана логика для работы с 2D графикой. В классе FieldPanel находятся методы: init() и start().
Первый осуществляет первоначальный старт программы, второй используется для различных симуляций. Симуляцию можно
 перезапустить, запускать каждую итерацию отдельно или бесконечно.
Для создания много поточности используется класс Timer и его метод scheduleAtFixedRate.
Для запуска из класса Main используется EventQueue.invokeLater. Он отправляет событие ( Runnable) в конце списка
 событий Swings и обрабатывается после обработки всех предыдущих графических событий. Существует поток, который
 продолжает опрос данных из очереди. После того, как этот поток достигнет  анонимного класса, он выполнит метод run().
